name: Main Branch CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feature/**
  pull_request:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  lint:
    permissions: write-all
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10.16'
          architecture: x64
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        uses: suo/flake8-github-action@releases/v1
        with:
          checkName: flake8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tests:
    name: Unit and Integration Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10.16'
          architecture: x64
      - name: Install Dependencies
        run: pip install -r requirements.txt
      # When not a pull request, run tests normally
      - name: Run Tests (no coverage)
        if: ${{ github.event_name != 'pull_request' }}
        run: pytest tests/
      # When on a pull request, run tests with coverage
      - name: Run Tests with Coverage
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          pip install coverage
          coverage run -m pytest tests/
          coverage xml
      # Upload the coverage.xml artifact for use in the coverage check job
      - name: Upload Coverage Report
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  coverage-check:
    name: Coverage Check
    needs: tests
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Download Coverage Report
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
      - name: Run Coverage Check
        uses: orgoro/coverage@v3.2
        with:
          coverageFile: coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          thresholdAll: 0.8
